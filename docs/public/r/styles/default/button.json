{
  "name": "button",
  "type": "registry:ui",
  "dependencies": [
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "ui/button.tsx",
      "content": "import { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport type * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  \"inline-flex shrink-0 items-center justify-center gap-2 whitespace-nowrap rounded-md font-medium text-sm outline-none ring-offset-transparent transition-all focus-visible:border-background focus-visible:ring-[3px] focus-visible:ring-ring/50 disabled:pointer-events-none disabled:opacity-50 aria-invalid:border-destructive aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 [&_svg:not([class*='size-'])]:size-4 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          'border-primary/20 border-x border-b bg-gradient-to-b from-primary/80 to-primary text-primary-foreground shadow focus:ring-3 focus:ring-primary/50 focus:ring-offset-1 active:opacity-90',\n        destructive:\n          'border-destructive/20 border-x border-b bg-gradient-to-b from-destructive/80 to-destructive text-destructive-foreground shadow focus:ring-3 focus:ring-destructive/50 focus:ring-offset-1 active:opacity-90',\n        warning:\n          'border-attention/20 border-x border-b bg-gradient-to-b from-attention/80 to-attention text-attention-foreground shadow focus:ring-3 focus:ring-attention/50 focus:ring-offset-1 active:opacity-90',\n        outline:\n          'border border-input bg-gradient-to-b from-background to-background/80 text-foreground shadow hover:bg-accent/50 focus:ring-3 focus:ring-ring/50 focus:ring-offset-1 active:opacity-90',\n        secondary:\n          'border-secondary/20 border-x border-b bg-gradient-to-b from-secondary/80 to-secondary text-secondary-foreground shadow focus:ring-3 focus:ring-accent focus:ring-offset-1 active:opacity-90',\n        ghost:\n          'text-foreground hover:bg-gradient-to-b hover:from-accent hover:to-accent/80 focus:ring-3 focus:ring-ring/50 focus:ring-offset-1 active:opacity-90',\n        link: 'text-primary underline-offset-4 hover:underline focus:ring-3 focus:ring-primary/50 active:opacity-90',\n        success:\n          'border-success border-b bg-gradient-to-b from-success/80 to-success text-white shadow focus:ring-3 focus:ring-success/50 focus:ring-offset-1 active:opacity-90',\n      },\n      size: {\n        default: 'h-8 rounded-xl px-3 py-2 has-[>svg]:px-3',\n        sm: 'h-7 gap-1.5 rounded-xl px-2.5 has-[>svg]:px-2.5',\n        lg: 'h-10 rounded-xl px-6 text-base has-[>svg]:px-4',\n        icon: 'size-9 rounded-xl',\n        pill: \"h-7 rounded-full px-2.5 has-[>svg]:px-2.5 [&_svg:not([class*='size-'])]:size-3\",\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\ninterface ButtonProps extends React.ComponentProps<'button'>, VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n  loading?: boolean;\n}\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  loading = false,\n  children,\n  disabled,\n  ...props\n}: ButtonProps) {\n  const Comp = asChild ? Slot : 'button';\n\n  return (\n    <Comp\n      data-slot='button'\n      className={cn(buttonVariants({ variant, size, className }))}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {/* {loading && <Loader2 className='mr-0.5 h-4 w-4 animate-spin' />} */}\n      {children}\n    </Comp>\n  );\n}\n\nexport { Button, buttonVariants };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}